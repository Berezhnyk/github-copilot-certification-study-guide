{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Setup Python Data Analysis Environment",
			"type": "shell",
			"command": "cd project-templates/python-data-analysis && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt",
			"group": "build",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Create virtual environment and install Python dependencies for data analysis project"
		},
		{
			"label": "Start Jupyter for Data Analysis",
			"type": "shell",
			"command": "cd project-templates/python-data-analysis && source venv/bin/activate && jupyter notebook copilot-data-analysis-starter.ipynb",
			"group": "test",
			"isBackground": true,
			"problemMatcher": [],
			"detail": "Launch Jupyter notebook for GitHub Copilot data analysis practice"
		},
		{
			"label": "Generate Sample Data",
			"type": "shell",
			"command": "cd project-templates/python-data-analysis && source venv/bin/activate && cd sample-data && python generate_sample_data.py",
			"group": "build",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Generate sample datasets for Python data analysis practice"
		},
		{
			"label": "Setup React Todo App",
			"type": "shell",
			"command": "cd project-templates/react-todo-app && npm install",
			"group": "build",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Install dependencies for React Todo App template"
		},
		{
			"label": "Start React Todo App",
			"type": "shell",
			"command": "cd project-templates/react-todo-app && npm start",
			"group": "test",
			"isBackground": true,
			"problemMatcher": [],
			"detail": "Start React development server"
		},
		{
			"label": "Setup Node.js API",
			"type": "shell",
			"command": "cd project-templates/nodejs-api && npm install",
			"group": "build",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Install dependencies for Node.js API template"
		},
		{
			"label": "Start Node.js API Dev Server",
			"type": "shell",
			"command": "cd project-templates/nodejs-api && npm run dev",
			"group": "test",
			"isBackground": true,
			"problemMatcher": [],
			"detail": "Start Node.js development server with hot reload"
		},
		{
			"label": "Run Practice Test 1",
			"type": "shell",
			"command": "echo '\\nüìù Practice Test 1 - Basic GitHub Copilot Knowledge\\n\\nOpen: mock-questions/practice-test-1.md\\n\\n‚è±Ô∏è  Time Limit: 30 minutes\\nüéØ Passing Score: 80%\\n\\nGood luck! üöÄ'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Start Practice Test 1 for certification preparation"
		},
		{
			"label": "Run Practice Test 2",
			"type": "shell",
			"command": "echo '\\nüìù Practice Test 2 - Advanced Features and Enterprise Usage\\n\\nOpen: mock-questions/practice-test-2.md\\n\\n‚è±Ô∏è  Time Limit: 45 minutes\\nüéØ Passing Score: 80%\\n\\nGood luck! üöÄ'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Start Practice Test 2 for certification preparation"
		},
		{
			"label": "Run Practice Test 3",
			"type": "shell",
			"command": "echo '\\nüìù Practice Test 3 - Advanced Topics and Comprehensive Review\\n\\nOpen: mock-questions/practice-test-3.md\\n\\n‚è±Ô∏è  Time Limit: 45 minutes\\nüéØ Passing Score: 80%\\n\\nGood luck! üöÄ'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Start Practice Test 3 for certification preparation"
		},
		{
			"label": "Run Practice Test 4",
			"type": "shell",
			"command": "echo '\\nüìù Practice Test 4 - Emerging Features (2024-2025)\\n\\nOpen: mock-questions/practice-test-4-emerging-features.md\\n\\n‚è±Ô∏è  Time Limit: 45 minutes\\nüéØ Passing Score: 80%\\nüöÄ Focus: Latest Copilot capabilities\\n\\nGood luck! üöÄ'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Start Practice Test 4 for emerging features assessment"
		},
		{
			"label": "Setup React Native App",
			"type": "shell",
			"command": "echo '\\nüì± React Native App Template Setup\\n\\nNavigate to: project-templates/react-native-app/\\n\\nFollow README.md for setup instructions:\\n1. Install React Native CLI\\n2. Install dependencies\\n3. Set up Android/iOS development environment\\n4. Run on simulator/device\\n\\nüöÄ Perfect for mobile development practice!'",
			"group": "build",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Setup React Native mobile app template"
		},
		{
			"label": "Open Progress Tracker",
			"type": "shell",
			"command": "echo '\\nüìä GitHub Copilot Certification Progress Tracker\\n\\nOpen: progress-tracker.md\\n\\n‚úÖ Track your completion progress\\nüìà Monitor study milestones\\nüéØ Assess certification readiness\\nüìù Record insights and notes\\n\\nüí° Update regularly to stay on track!'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Open the interactive progress tracking system"
		},
		{
			"label": "Check Study Progress",
			"type": "shell",
			"command": "echo '\\nüìö GitHub Copilot Certification Study Progress\\n\\n‚úÖ Study Materials: 12/12 completed\\n   ‚Ä¢ Fundamentals, Prompt Engineering, Advanced Features\\n   ‚Ä¢ Responsible AI, Plans & Features, Data Handling\\n   ‚Ä¢ Testing, Privacy, Developer Use Cases\\n   ‚Ä¢ Emerging Features 2025, Quick Reference & Troubleshooting\\n\\n‚úÖ Practice Exercises: 5/5 completed\\n   ‚Ä¢ Beginner, Intermediate, Advanced, Coding Challenges\\n   ‚Ä¢ Emerging Features (Spaces, Agent, Extensions, MCP)\\n\\n‚úÖ Mock Tests: 4/4 completed\\n   ‚Ä¢ Practice Test 1, 2, 3, and Emerging Features\\n\\n‚úÖ Project Templates: 4/4 completed\\n   ‚Ä¢ React Todo App, Python Data Analysis\\n   ‚Ä¢ Node.js API, React Native Mobile App\\n\\n‚úÖ Additional Resources:\\n   ‚Ä¢ Progress Tracker, Code Examples\\n\\nüéØ Comprehensive preparation complete with 2025 updates!\\nüöÄ You are ready for the certification exam!'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Check your current study progress"
		},
		{
			"label": "Practice Emerging Features",
			"type": "shell",
			"command": "echo '\\nüöÄ GitHub Copilot Emerging Features Practice Guide\\n\\nüìÅ New Study Materials:\\n   ‚Ä¢ 10-emerging-features-2025.md - Latest Copilot capabilities\\n   ‚Ä¢ emerging-features-exercises.md - 12 hands-on exercises\\n\\nüéØ Key Features to Master:\\n   ‚Ä¢ Copilot Spaces - Collaborative AI workspaces\\n   ‚Ä¢ Coding Agent - Autonomous development tasks\\n   ‚Ä¢ Extensions - Third-party tool integrations\\n   ‚Ä¢ MCP Servers - External data connections\\n   ‚Ä¢ Custom Instructions - Personalized guidance\\n   ‚Ä¢ Multi-Model Workflows - Optimal AI selection\\n\\nüìù Practice Test 4 - Emerging Features (25 questions)\\n\\nüí° Start with the study guide, then practice exercises!'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Guide for practicing with GitHub Copilot's newest features"
		},
		{
			"label": "Open Study Schedule",
			"type": "shell",
			"command": "echo '\\nüìÖ 2-Week GitHub Copilot Certification Study Schedule\\n\\nWeek 1:\\n‚Ä¢ Day 1-2: Fundamentals & Prompt Engineering\\n‚Ä¢ Day 3-4: Advanced Features & Responsible AI\\n‚Ä¢ Day 5-6: Plans, Data Handling & Privacy\\n‚Ä¢ Day 7: Review & Practice Test 1\\n\\nWeek 2:\\n‚Ä¢ Day 1-2: Testing & Developer Use Cases\\n‚Ä¢ Day 3-4: Hands-on Projects & Coding Challenges\\n‚Ä¢ Day 5-6: Advanced Exercises & Practice Test 2\\n‚Ä¢ Day 7: Final Review & Exam Preparation\\n\\nüéØ Stick to the schedule for optimal preparation!'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Display the recommended 2-week study schedule"
		},
		{
			"label": "Setup Go Environment",
			"type": "shell",
			"command": "echo '\\nüêπ Setting up Go development environment...\\n' && go version && go mod tidy",
			"group": "build",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Verify Go installation and initialize module dependencies"
		},
		{
			"label": "Run Go Microservices Exercise",
			"type": "shell",
			"command": "cd practice-exercises/solutions/advanced && echo '\\nüöÄ Running Go Microservices Communication Exercise\\n' && go mod init microservices-demo 2>/dev/null || echo 'Module already initialized' && go mod tidy && go run 06_microservices_communication.go",
			"group": "test",
			"isBackground": false,
			"problemMatcher": ["$go"],
			"detail": "Run the Go microservices communication exercise"
		},
		{
			"label": "Setup Rust Environment",
			"type": "shell",
			"command": "echo '\\nü¶Ä Setting up Rust development environment...\\n' && rustc --version && cargo --version",
			"group": "build",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Verify Rust installation and display version information"
		},
		{
			"label": "Run Rust High Performance Exercise",
			"type": "shell",
			"command": "cd practice-exercises/solutions/advanced && echo '\\n‚ö° Running Rust High-Performance Processing Exercise\\n' && cargo init high-performance-demo --name high_performance_processing 2>/dev/null || echo 'Cargo project exists' && cp 07_high_performance_processing.rs high-performance-demo/src/main.rs && cd high-performance-demo && cargo build",
			"group": "test",
			"isBackground": false,
			"problemMatcher": ["$rustc"],
			"detail": "Build and run the Rust high-performance processing exercise"
		},
		{
			"label": "Setup Java Environment",
			"type": "shell",
			"command": "echo '\\n‚òï Setting up Java development environment...\\n' && java --version && javac --version",
			"group": "build",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Verify Java installation and display version information"
		},
		{
			"label": "Compile Java Microservices Exercise",
			"type": "shell",
			"command": "cd practice-exercises/solutions/coding-challenges && echo '\\nüèóÔ∏è Compiling Java E-commerce Microservices Platform\\n' && javac -cp '.:/usr/local/lib/*' 09_microservices_platform.java 2>/dev/null || echo 'Note: This exercise requires Spring Boot dependencies. See README for setup instructions.'",
			"group": "build",
			"isBackground": false,
			"problemMatcher": ["$javac"],
			"detail": "Compile the Java microservices platform exercise"
		},
		{
			"label": "Run SQL Database Optimization",
			"type": "shell",
			"command": "cd practice-exercises/solutions/advanced && echo '\\nüóÑÔ∏è SQL Database Optimization Exercise\\n\\nFile: 08_database_optimization.sql\\n\\nüìã This contains advanced SQL queries and optimizations.\\nüí° To run these queries:\\n   1. Set up a PostgreSQL/MySQL database\\n   2. Load sample data\\n   3. Execute the optimization queries\\n   4. Compare performance metrics\\n\\nüöÄ Perfect for practicing SQL with Copilot!'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Display instructions for the SQL database optimization exercise"
		},
		{
			"label": "Setup TypeScript Practice Environment",
			"type": "shell",
			"command": "cd practice-exercises/solutions && echo '\\nüìò Setting up TypeScript environment for practice exercises...\\n' && npm init -y 2>/dev/null || echo 'package.json exists' && npm install typescript @types/node ts-node --save-dev 2>/dev/null || echo 'Dependencies already installed' && npx tsc --init 2>/dev/null || echo 'tsconfig.json exists'",
			"group": "build",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Initialize TypeScript environment for practice exercises"
		},
		{
			"label": "Run TypeScript Advanced Exercises",
			"type": "shell",
			"command": "cd practice-exercises/solutions/advanced && echo '\\nüöÄ Running TypeScript Advanced Exercises\\n' && npx ts-node 01_context_aware_api.ts 2>/dev/null || echo 'Run setup task first if TypeScript environment is not ready'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": ["$tsc"],
			"detail": "Run TypeScript advanced practice exercises"
		},
		{
			"label": "Run Python Practice Exercises",
			"type": "shell",
			"command": "cd practice-exercises/solutions && echo '\\nüêç Running Python Practice Exercises\\n\\nüìÅ Available Python exercises:\\n   ‚Ä¢ Beginner: 7/8 exercises\\n   ‚Ä¢ Intermediate: 6/6 exercises\\n   ‚Ä¢ Advanced: ML fraud detection, multi-tenant SaaS\\n   ‚Ä¢ Emerging Features: Agent systems, collaborative coding\\n\\nüí° Select a specific .py file to run with Python 3'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Display available Python practice exercises"
		},
		{
			"label": "Test All Language Environments",
			"type": "shell",
			"command": "echo '\\nüîß Testing All Programming Language Environments\\n' && echo '\\nüêç Python:' && python3 --version && echo '\\nüìò TypeScript/Node.js:' && node --version && npm --version && echo '\\nüêπ Go:' && go version && echo '\\nü¶Ä Rust:' && rustc --version && echo '\\n‚òï Java:' && java --version && echo '\\n\\n‚úÖ Environment check complete!'",
			"group": "build",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Test all programming language environments used in practice exercises"
		},
		{
			"label": "Practice Exercise Guide",
			"type": "shell",
			"command": "echo '\\nüìö GitHub Copilot Practice Exercise Guide\\n\\nüéØ Available Exercise Categories:\\n\\n1Ô∏è‚É£ Beginner (8 exercises):\\n   ‚Ä¢ Basic functions, data processing, string manipulation\\n   ‚Ä¢ Files: exercise-1-basic-function.py to exercise-8-test-generation.py\\n\\n2Ô∏è‚É£ Intermediate (6 exercises):\\n   ‚Ä¢ Data structures, design patterns, async programming\\n   ‚Ä¢ Files: exercise-1-data-structure.py to exercise-6-websocket-chat.py\\n\\n3Ô∏è‚É£ Advanced (12 exercises):\\n   ‚Ä¢ Microservices, ML, enterprise applications\\n   ‚Ä¢ Languages: TypeScript, Python, Go, Rust, SQL\\n\\n4Ô∏è‚É£ Coding Challenges (12 exercises):\\n   ‚Ä¢ Algorithms, optimization, real-world problems\\n   ‚Ä¢ Languages: Python, TypeScript, Go, Rust, Java\\n\\n5Ô∏è‚É£ Emerging Features (12 exercises):\\n   ‚Ä¢ Copilot Spaces, Extensions, MCP servers\\n   ‚Ä¢ Focus on 2024-2025 features\\n\\nüöÄ Use the other tasks to run specific language environments!'",
			"group": "test",
			"isBackground": false,
			"problemMatcher": [],
			"detail": "Complete guide to all practice exercises by category and language"
		}
	]
}